//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Manos\Desktop\LatexCompiler\LatexCompiler\Grammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LatexCompiler {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="GrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>Product_expression</c>
	/// labeled alternative in <see cref="GrammarParser.product"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProduct_expression([NotNull] GrammarParser.Product_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Cos_expression</c>
	/// labeled alternative in <see cref="GrammarParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCos_expression([NotNull] GrammarParser.Cos_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Simple_Function_expression</c>
	/// labeled alternative in <see cref="GrammarParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimple_Function_expression([NotNull] GrammarParser.Simple_Function_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Log_expression</c>
	/// labeled alternative in <see cref="GrammarParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLog_expression([NotNull] GrammarParser.Log_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Sin_expression</c>
	/// labeled alternative in <see cref="GrammarParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSin_expression([NotNull] GrammarParser.Sin_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Arctan_expression</c>
	/// labeled alternative in <see cref="GrammarParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArctan_expression([NotNull] GrammarParser.Arctan_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Arccos_expression</c>
	/// labeled alternative in <see cref="GrammarParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArccos_expression([NotNull] GrammarParser.Arccos_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Arcsin_expression</c>
	/// labeled alternative in <see cref="GrammarParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArcsin_expression([NotNull] GrammarParser.Arcsin_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Square_expression</c>
	/// labeled alternative in <see cref="GrammarParser.squareRoot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSquare_expression([NotNull] GrammarParser.Square_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>NSquare_expression</c>
	/// labeled alternative in <see cref="GrammarParser.squareRoot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNSquare_expression([NotNull] GrammarParser.NSquare_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Sum_expression</c>
	/// labeled alternative in <see cref="GrammarParser.sum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSum_expression([NotNull] GrammarParser.Sum_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Ceil_expression</c>
	/// labeled alternative in <see cref="GrammarParser.ceil"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCeil_expression([NotNull] GrammarParser.Ceil_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Fraction_expression</c>
	/// labeled alternative in <see cref="GrammarParser.fraction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFraction_expression([NotNull] GrammarParser.Fraction_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Lim_expression</c>
	/// labeled alternative in <see cref="GrammarParser.lim"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLim_expression([NotNull] GrammarParser.Lim_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Integrals_expression</c>
	/// labeled alternative in <see cref="GrammarParser.integrals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegrals_expression([NotNull] GrammarParser.Integrals_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Expression_expr</c>
	/// labeled alternative in <see cref="GrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_expr([NotNull] GrammarParser.Expression_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>PlusMinus_expr</c>
	/// labeled alternative in <see cref="GrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlusMinus_expr([NotNull] GrammarParser.PlusMinus_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ExpExpressionMinus_expr</c>
	/// labeled alternative in <see cref="GrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpExpressionMinus_expr([NotNull] GrammarParser.ExpExpressionMinus_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Assign_expr</c>
	/// labeled alternative in <see cref="GrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssign_expr([NotNull] GrammarParser.Assign_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>GTLTGTELTE_expr</c>
	/// labeled alternative in <see cref="GrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGTLTGTELTE_expr([NotNull] GrammarParser.GTLTGTELTE_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>MultiDiv_expr</c>
	/// labeled alternative in <see cref="GrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiDiv_expr([NotNull] GrammarParser.MultiDiv_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ExpExpression_expr</c>
	/// labeled alternative in <see cref="GrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpExpression_expr([NotNull] GrammarParser.ExpExpression_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Floor_expression</c>
	/// labeled alternative in <see cref="GrammarParser.floor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloor_expression([NotNull] GrammarParser.Floor_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompileUnit([NotNull] GrammarParser.CompileUnitContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] GrammarParser.ExprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] GrammarParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.paren"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParen([NotNull] GrammarParser.ParenContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.squareRoot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSquareRoot([NotNull] GrammarParser.SquareRootContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.fraction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFraction([NotNull] GrammarParser.FractionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.floor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloor([NotNull] GrammarParser.FloorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.ceil"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCeil([NotNull] GrammarParser.CeilContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctions([NotNull] GrammarParser.FunctionsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.sum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSum([NotNull] GrammarParser.SumContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.lim"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLim([NotNull] GrammarParser.LimContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.product"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProduct([NotNull] GrammarParser.ProductContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.integrals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegrals([NotNull] GrammarParser.IntegralsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.greekLetters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGreekLetters([NotNull] GrammarParser.GreekLettersContext context);
}
} // namespace LatexCompiler
